name: Build And Release
on:
  push:
    tags:
      - v*
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: arm64
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Show build info
        id: build_info
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,refs/tags/,,g')
          SHA=$(echo "${{ github.sha }}")
          DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          BINARY_NAME="webdav-${GOOS}-${GOARCH}"
          if [[ "$GOOS" == "windows" ]]; then
            BINARY_NAME="webdav-${GOOS}-${GOARCH}.exe"
          fi
          echo "GOOS: $GOOS, GOARCH: $GOARCH, CGO_ENABLED: $CGO_ENABLED"
          echo "VERSION: $VERSION"
          echo "SHA: $SHA"
          echo "BUILD_TAG=$VERSION" >> $GITHUB_ENV
          echo "BUILD_SHA=$SHA" >> $GITHUB_ENV
          echo "BUILD_DATE=$DATE" >> $GITHUB_ENV
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV


      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25.*'

      - name: Build
        run: |
          go build -ldflags="-s -w -X 'github.com/llklkl/webdav/cmd.BuildTag=${{ env.BUILD_TAG }}' -X 'github.com/llklkl/webdav/cmd.BuildCommit=${{ env.BUILD_SHA }}' -X 'github.com/llklkl/webdav/cmd.BuildDate=${{ env.BUILD_DATE }}'" -trimpath -v -o "${{ env.BINARY_NAME }}" .

      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.BINARY_NAME }}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
